trigger:
  branches:
    include: [ '*' ]
    exclude: [ 'refs/tags/*' ]

jobs:

- job: Windows
  pool:
    vmImage: vs2017-win2016
  steps:

  - powershell: .\build.ps1 -Target Test -Configuration Release
    displayName: Build and test

  # Workaround for https://github.com/nunit/nunit/issues/3012#issuecomment-441517922
  - task: PublishTestResults@2
    displayName: Publish net35 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results\net35\*.xml
      mergeTestResults: true
      testRunTitle: net35/Windows
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish netcoreapp1.1 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results\netcoreapp1.1\*.xml
      mergeTestResults: true
      testRunTitle: netcoreapp1.1/Windows
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish netcoreapp2.1 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results\netcoreapp2.1\*.xml
      mergeTestResults: true
      testRunTitle: netcoreapp2.1/Windows
    condition: succeededOrFailed()

  - powershell: .\build.ps1 -Target Package --artifact-dir='$(Build.ArtifactStagingDirectory)'
    displayName: Package

  - task: PublishBuildArtifacts@1
    displayName: Save package artifacts
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: Package

- job: Linux
  pool:
    vmImage: ubuntu-16.04
  steps:

  - bash: |
      wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      sudo dpkg -i packages-microsoft-prod.deb
      sudo apt-get install apt-transport-https
      sudo apt-get update
      sudo apt-get install dotnet-sdk-2.2
      ./build.sh --target=Test --configuration=Release
    displayName: Build and test

  # Workaround for https://github.com/nunit/nunit/issues/3012#issuecomment-441517922
  - task: PublishTestResults@2
    displayName: Publish net35 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/net35/*.xml
      mergeTestResults: true
      testRunTitle: net35/Linux
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish netcoreapp1.1 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/netcoreapp1.1/*.xml
      mergeTestResults: true
      testRunTitle: netcoreapp1.1/Linux
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish netcoreapp2.1 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/netcoreapp2.1/*.xml
      mergeTestResults: true
      testRunTitle: netcoreapp2.1/Linux
    condition: succeededOrFailed()

- job: macOS
  pool:
    vmImage: macOS-latest
  steps:

  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      version: 3.1.x
      
  - task: UseDotNet@2
    displayName: 'Install .NET Core runtime 2.1'
    inputs:
      packageType: runtime
      version: 2.1.x

  - bash: |
     dotnet tool install --global Cake.Tool
     dotnet cake --target=Test --configuration=Release
    displayName: Build and test

  # Workaround for https://github.com/nunit/nunit/issues/3012#issuecomment-441517922
  - task: PublishTestResults@2
    displayName: Publish net35 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/net35/*.xml
      mergeTestResults: true
      testRunTitle: net35/macOS
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish netcoreapp1.1 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/netcoreapp1.1/*.xml
      mergeTestResults: true
      testRunTitle: netcoreapp1.1/macOS
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish netcoreapp2.1 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/netcoreapp2.1/*.xml
      mergeTestResults: true
      testRunTitle: netcoreapp2.1/macOS
    condition: succeededOrFailed()
